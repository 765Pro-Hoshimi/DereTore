<Window x:Class="DereTore.Applications.StarlightDirector.UI.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DereTore.Applications.StarlightDirector.UI.Windows"
        xmlns:controls="clr-namespace:DereTore.Applications.StarlightDirector.UI.Controls"
        xmlns:entities="clr-namespace:DereTore.Applications.StarlightDirector.Entities;assembly=DereTore.Applications.StarlightDirector.Entities"
        xmlns:ui="clr-namespace:DereTore.Applications.StarlightDirector.UI"
        xmlns:converters="clr-namespace:DereTore.Applications.StarlightDirector.UI.Converters"
        xmlns:pages="clr-namespace:DereTore.Applications.StarlightDirector.UI.Controls.Pages"
        xmlns:fluent="urn:fluent-ribbon"
        xmlns:primitives="clr-namespace:DereTore.Applications.StarlightDirector.UI.Controls.Primitives"
        mc:Ignorable="d" Name="Me" WindowStartupLocation="CenterScreen"
        Title="Starlight Director" Width="920" Height="620" MinWidth="920" MinHeight="400"
        Loaded="MainWindow_OnLoaded" Closing="MainWindow_OnClosing" SourceInitialized="MainWindow_OnSourceInitialized">
    <Window.Resources>
        <converters:BooleanToValuesConverter TrueValue="Stop" FalseValue="Start" x:Key="PreviewStatusToButtonTextConverter"></converters:BooleanToValuesConverter>
        <converters:BooleanToValuesConverter TrueValue="{StaticResource RibbonIconEditMode}" FalseValue="{StaticResource RibbonIconPreviewStart}" x:Key="PreviewStatusToButtonIconConverter"></converters:BooleanToValuesConverter>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Margins: hack for 'in-window' ribbon and backstage -->
        <fluent:Ribbon IsQuickAccessToolBarVisible="False" Margin="0 -27 0 0" CanCustomizeRibbon="False" Name="Ribbon">
            <fluent:Ribbon.Menu>
                <fluent:Backstage Header="File" KeyTip="F" Background="{Binding ElementName=Me, Path=AccentColorBrush, Mode=OneWay}">
                    <fluent:BackstageTabControl Margin="0 -4 0 0">
                        <fluent:Button Header="New Project" KeyTip="N" Command="{x:Static local:MainWindow.CmdFileNewProject}"
                                       Icon="{StaticResource RibbonIconFileNew}"/>
                        <fluent:Button Header="Open Project" KeyTip="O" Command="{x:Static local:MainWindow.CmdFileOpenProject}"
                                       Icon="{StaticResource RibbonIconFileOpen}"/>
                        <fluent:Button Header="Save Project" KeyTip="S" Command="{x:Static local:MainWindow.CmdFileSaveProject}"
                                       Icon="{StaticResource RibbonIconFileSave}"/>
                        <fluent:Button Header="Save Project As" KeyTip="A" Command="{x:Static local:MainWindow.CmdFileSaveProjectAs}"
                                       Icon="{StaticResource RibbonIconFileSaveAs}"/>
                        <fluent:BackstageTabItem Header="Summary" KeyTip="M">
                            <pages:SummaryPage/>
                        </fluent:BackstageTabItem>
                        <fluent:BackstageTabItem Header="Recent" KeyTip="R">
                            <pages:RecentPage/>
                        </fluent:BackstageTabItem>
                        <fluent:BackstageTabItem Header="Build" KeyTip="B">
                            <pages:BuildPage Project="{Binding ElementName=Me, Path=Project, Mode=OneWay}"/>
                        </fluent:BackstageTabItem>
                        <fluent:BackstageTabItem Header="Import" KeyTip="I">
                            <pages:ImportPage/>
                        </fluent:BackstageTabItem>
                        <fluent:BackstageTabItem Header="Export" KeyTip="E">
                            <pages:ExportPage SelectedScore="{Binding ElementName=Editor, Path=Score, Mode=OneWay}"/>
                        </fluent:BackstageTabItem>
                        <fluent:BackstageTabItem Header="About" KeyTip="T">
                            <pages:AboutPage/>
                        </fluent:BackstageTabItem>
                        <fluent:Button Header="Preferences" KeyTip="C" Command="{x:Static local:MainWindow.CmdFilePreferences}"
                                       Icon="{StaticResource RibbonIconFilePreferences}"/>
                        <fluent:Button Header="Exit" KeyTip="X" Command="{x:Static local:MainWindow.CmdFileExit}"
                                       Icon="{StaticResource RibbonIconFileExit}"/>
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>
            <fluent:RibbonTabItem Header="Home" KeyTip="H">
                <fluent:RibbonGroupBox Header="Edit">
                    <fluent:DropDownButton Header="Mode" Size="Large" LargeIcon="{StaticResource RibbonIconEditMode}">
                        <fluent:MenuItem Header="_Select" Command="{x:Static local:MainWindow.CmdEditModeSelect}" Icon="{StaticResource RibbonIconEditModeSelect}"
                            IsChecked="{Binding ElementName=Editor, Path=EditMode, Mode=OneWay, Converter={StaticResource EditModeToIsCheckedConverter}, ConverterParameter={x:Static ui:EditMode.Select}}"/>
                        <fluent:MenuItem Header="Create _relations" Command="{x:Static local:MainWindow.CmdEditModeEditRelations}"
                            IsChecked="{Binding ElementName=Editor, Path=EditMode, Mode=OneWay, Converter={StaticResource EditModeToIsCheckedConverter}, ConverterParameter={x:Static ui:EditMode.Relations}}"/>
                        <fluent:MenuItem Header="_Clear relations" Command="{x:Static local:MainWindow.CmdEditModeClear}" Icon="{StaticResource RibbonIconEditModeClear}"
                            IsChecked="{Binding ElementName=Editor, Path=EditMode, Mode=OneWay, Converter={StaticResource EditModeToIsCheckedConverter}, ConverterParameter={x:Static ui:EditMode.Clear}}"/>
                    </fluent:DropDownButton>
                    <TextBlock Padding="4 2">
                        <Run Text="Current: "/>
                        <Bold>
                            <Run Text="{Binding ElementName=Editor, Path=EditMode, Converter={StaticResource DescribedEnumToStringConverter}, ConverterParameter={x:Type ui:EditMode}, Mode=OneWay}"/>
                        </Bold>
                    </TextBlock>
                    <fluent:Button Header="Select All" Size="Middle" Command="{x:Static local:MainWindow.CmdEditSelectAll}" Icon="{StaticResource RibbonIconEditSelectAll}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Measure">
                    <fluent:SplitButton Header="Append" Command="{x:Static local:MainWindow.CmdEditBarAppend}" LargeIcon="{StaticResource RibbonIconBarAppend}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <fluent:Spinner Grid.Column="1" Header="Many:" VerticalContentAlignment="Center" Minimum="1" Maximum="50" Interval="1"
                                            Value="{Binding ElementName=EditBarAppendMany, Path=CommandParameter, Mode=OneWayToSource}"
                                            TextToValueConverter="{StaticResource PositiveInt32ToStringConverter}"/>
                            <fluent:Button Grid.Column="2" x:Name="EditBarAppendMany" Header="Append" Size="Small" Margin="5 0 0 0" Command="{x:Static local:MainWindow.CmdEditBarAppendMany}"
                                           Icon="{StaticResource RibbonIconBarAppendMany}"/>
                        </Grid>
                    </fluent:SplitButton>
                    <fluent:Button Header="Insert" Command="{x:Static local:MainWindow.CmdEditBarInsert}" Size="Middle" Icon="{StaticResource RibbonIconBarInsert}"/>
                    <fluent:Button Header="Edit" Command="{x:Static local:MainWindow.CmdEditBarEdit}" Size="Middle" Icon="{StaticResource RibbonIconBarEdit}"/>
                    <fluent:Button Header="Delete" Command="{x:Static local:MainWindow.CmdEditBarDelete}" Size="Middle" Icon="{StaticResource RibbonIconBarDelete}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Note">
                    <fluent:Button Header="Add" Command="{x:Static local:MainWindow.CmdEditNoteAdd}" LargeIcon="{StaticResource RibbonIconNoteAdd}" Visibility="Collapsed"/>
                    <fluent:DropDownButton Header="Start Position" Size="Middle" Icon="{StaticResource RibbonIconNoteEdit}">
                        <fluent:MenuItem Header="Left (1)" Command="{x:Static local:MainWindow.CmdEditNoteStartPosition1}"/>
                        <fluent:MenuItem Header="Center Left (2)" Command="{x:Static local:MainWindow.CmdEditNoteStartPosition2}"/>
                        <fluent:MenuItem Header="Center (3)" Command="{x:Static local:MainWindow.CmdEditNoteStartPosition3}"/>
                        <fluent:MenuItem Header="Center Right (4)" Command="{x:Static local:MainWindow.CmdEditNoteStartPosition4}"/>
                        <fluent:MenuItem Header="Right (5)" Command="{x:Static local:MainWindow.CmdEditNoteStartPosition5}"/>
                    </fluent:DropDownButton>
                    <fluent:Button Header="Delete" Command="{x:Static local:MainWindow.CmdEditNoteDelete}" Size="Middle" Icon="{StaticResource RibbonIconNoteDelete}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Music">
                    <fluent:Button Header="Select File" Command="{x:Static local:MainWindow.CmdMusicSelectWaveFile}" LargeIcon="{StaticResource RibbonIconMusicSelectWaveFile}"/>
                    <fluent:Button Header="Play" Command="{x:Static local:MainWindow.CmdMusicPlay}" Size="Middle" Icon="{StaticResource RibbonIconMusicPlay}"/>
                    <fluent:Button Header="Stop" Command="{x:Static local:MainWindow.CmdMusicStop}" Size="Middle" Icon="{StaticResource RibbonIconMusicStop}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Score">
                    <fluent:DropDownButton Header="Difficulty" LargeIcon="{StaticResource RibbonIconScoreDifficulty}">
                        <fluent:MenuItem Header="Debut" Command="{x:Static local:MainWindow.CmdScoreSwitchDifficulty}" CommandParameter="{x:Static entities:Difficulty.Debut}"
                            IsChecked="{Binding ElementName=Me, Path=Project.Difficulty, Converter={StaticResource DifficultyToIsCheckedConverter}, ConverterParameter={x:Static entities:Difficulty.Debut}}"/>
                        <fluent:MenuItem Header="Regular" Command="{x:Static local:MainWindow.CmdScoreSwitchDifficulty}" CommandParameter="{x:Static entities:Difficulty.Regular}"
                            IsChecked="{Binding ElementName=Me, Path=Project.Difficulty, Converter={StaticResource DifficultyToIsCheckedConverter}, ConverterParameter={x:Static entities:Difficulty.Regular}}"/>
                        <fluent:MenuItem Header="Pro" Command="{x:Static local:MainWindow.CmdScoreSwitchDifficulty}" CommandParameter="{x:Static entities:Difficulty.Pro}"
                            IsChecked="{Binding ElementName=Me, Path=Project.Difficulty, Converter={StaticResource DifficultyToIsCheckedConverter}, ConverterParameter={x:Static entities:Difficulty.Pro}}"/>
                        <fluent:MenuItem Header="Master" Command="{x:Static local:MainWindow.CmdScoreSwitchDifficulty}" CommandParameter="{x:Static entities:Difficulty.Master}"
                            IsChecked="{Binding ElementName=Me, Path=Project.Difficulty, Converter={StaticResource DifficultyToIsCheckedConverter}, ConverterParameter={x:Static entities:Difficulty.Master}}"/>
                        <fluent:MenuItem Header="Master+" Command="{x:Static local:MainWindow.CmdScoreSwitchDifficulty}" CommandParameter="{x:Static entities:Difficulty.MasterPlus}"
                            IsChecked="{Binding ElementName=Me, Path=Project.Difficulty, Converter={StaticResource DifficultyToIsCheckedConverter}, ConverterParameter={x:Static entities:Difficulty.MasterPlus}}"/>
                    </fluent:DropDownButton>
                    <TextBlock Padding="4 2 0 2">
                        <Run Text="Current: "/>
                        <Bold>
                            <Run Text="{Binding ElementName=Editor, Path=Score.Difficulty, Converter={StaticResource DescribedEnumToStringConverter}, ConverterParameter={x:Type entities:Difficulty}, Mode=OneWay}"/>
                        </Bold>
                    </TextBlock>
                    <fluent:TextBox Header="BPM:" InputWidth="75" VerticalContentAlignment="Center" Text="{Binding ElementName=Editor, Path=Project.Settings.GlobalBpm, Converter={StaticResource PositiveDoubleToStringConverter}}"/>
                    <fluent:TextBox Header="Start Offset:" InputWidth="75" VerticalContentAlignment="Center" Text="{Binding ElementName=Editor, Path=Project.Settings.StartTimeOffset, Converter={StaticResource DoubleToStringConverter}}"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="View" KeyTip="V">
                <fluent:RibbonGroupBox Header="Zoom">
                    <fluent:Button Header="Zoom In" Size="Middle" Command="{x:Static local:MainWindow.CmdViewZoomIn}" Icon="{StaticResource RibbonIconViewZoomIn}"/>
                    <fluent:Button Header="Zoom Out" Size="Middle" Command="{x:Static local:MainWindow.CmdViewZoomOut}" Icon="{StaticResource RibbonIconViewZoomOut}"/>
                    <fluent:DropDownButton Header="Zoom To Beat" Size="Middle" Icon="{StaticResource RibbonIconViewZoomToBeat}">
                        <fluent:MenuItem Header="1/4" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="4"/>
                        <fluent:MenuItem Header="1/6" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="6"/>
                        <fluent:MenuItem Header="1/8" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="8"/>
                        <fluent:MenuItem Header="1/12" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="12"/>
                        <fluent:MenuItem Header="1/16" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="16"/>
                        <fluent:MenuItem Header="1/24" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="24"/>
                        <fluent:MenuItem Header="1/32" Command="{x:Static local:MainWindow.CmdViewZoomToBeat}" CommandParameter="32"/>
                    </fluent:DropDownButton>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Miscellaneous">
                    <fluent:ComboBox Header="Scroll Speed" IsEditable="False" HorizontalAlignment="Left" InputWidth="80" SelectedIndex="4">
                        <ComboBoxItem Content="1" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="2" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="3" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="4" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="5" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="6" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="7" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="8" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="9" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                        <ComboBoxItem Content="10" Selected="ScrollSpeedComboBoxItem_OnSelected"/>
                    </fluent:ComboBox>
                    <fluent:ToggleButton Header="Note Relation Indicator" Command="{x:Static local:MainWindow.CmdViewMiscSetRelationIndicatorsVisibility}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Mode=OneWay}"
                                         Icon="{StaticResource RibbonIconViewMiscRelationIndicatorVisibility}" Size="Middle"/>
                    <fluent:ToggleButton Header="Inverted Scrolling" Command="{x:Static local:MainWindow.CmdViewMiscInvertScrollDirection}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked, Mode=OneWay}"
                                         Icon="{StaticResource RibbonIconViewMiscInvertScrollDirection}" Size="Middle"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="Preview" KeyTip="P">
                <fluent:RibbonGroupBox Header="Control">
                    <fluent:Button Header="{Binding ElementName=Me, Path=IsPreviewing, Converter={StaticResource PreviewStatusToButtonTextConverter}}" Command="{x:Static local:MainWindow.CmdPreviewToggle}" LargeIcon="{Binding ElementName=Me, Path=IsPreviewing, Converter={StaticResource PreviewStatusToButtonIconConverter}}"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Options">
                    <fluent:CheckBox Header="From beginning" IsChecked="{Binding ElementName=Me, Path=PreviewFromStart}"></fluent:CheckBox>
                    <fluent:ComboBox Header="Fps" IsEditable="False" SelectedIndex="3">
                        <ComboBoxItem Content="30" Selected="PreviewFpsComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="60" Selected="PreviewFpsComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="90" Selected="PreviewFpsComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="120" Selected="PreviewFpsComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="Unlimited" Selected="PreviewFpsComboBoxItem_Selected"></ComboBoxItem>
                    </fluent:ComboBox>
                    <fluent:ComboBox Header="Speed" IsEditable="False" SelectedIndex="8">
                        <ComboBoxItem Content="0" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="1" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="2" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="3" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="4" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="5" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="6" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="7" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="8" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="9" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                        <ComboBoxItem Content="10" Selected="PreviewSpeedComboBoxItem_Selected"></ComboBoxItem>
                    </fluent:ComboBox>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>
        <Grid Grid.Row="2" Background="#FF181818" x:Name="EditorGrid" Visibility="{Binding ElementName=Me, Path=IsPreviewing, Converter={StaticResource NullableBooleanToVisibilityConverter}, ConverterParameter={StaticResource True}}">
            <!-- CustomScroll.ScrollSpeed is still needed because when the ComboBox item is selected, the ScrollViewer has not been set yet. -->
            <ScrollViewer Name="ScrollViewer" ui:CustomScroll.ScrollSpeed="5" PreviewMouseWheel="ScrollViewer_OnPreviewMouseWheel"
                          VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Grid>
                    <controls:ScoreEditor x:Name="Editor" MinHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ScrollViewer}, Path=ViewportHeight, Mode=OneWay}"
                                      HorizontalAlignment="Center" ScrollViewer="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ScrollViewer}, Mode=OneWay}">
                        <controls:ScoreEditor.ContextMenu>
                            <fluent:ContextMenu>
                                <fluent:MenuItem Header="Add s_pecial note">
                                    <fluent:MenuItem Header="_Variant BPM" Command="{x:Static local:MainWindow.CmdContextAddSpecialNoteVariantBpm}"/>
                                </fluent:MenuItem>
                            </fluent:ContextMenu>
                        </controls:ScoreEditor.ContextMenu>
                    </controls:ScoreEditor>
                    <controls:ScoreViewer x:Name="Viewer"/>
                </Grid>
            </ScrollViewer>
            <primitives:ScrollViewerThumbnail ScrollViewer="{Binding ElementName=ScrollViewer}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="10"/>
        </Grid>
        <Grid Grid.Row="2" Background="#FF181818" Visibility="{Binding ElementName=Me, Path=IsPreviewing, Converter={StaticResource NullableBooleanToVisibilityConverter}}" x:Name="PreviewGrid">
            <controls:ScorePreviewer x:Name="ScorePreviewer"></controls:ScorePreviewer>
        </Grid>
        <Grid Grid.Row="3">
            <StatusBar>
                <StatusBarItem>
                    <TextBlock Margin="4" VerticalAlignment="Center">
                        <TextBlock Visibility="{Binding ElementName=Me, Path=IsTemporaryMessageVisible, Converter={StaticResource NullableBooleanToVisibilityConverter}, ConverterParameter={x:Static converters:NullableBooleanToVisibilityConverter.Negate}}">
                            <Run Text="{Binding ElementName=Me, Path=Project.SaveFileName, Mode=OneWay, FallbackValue={StaticResource Unsaved}}"/>
                            [
                            <Bold>
                                <Run Text="{Binding ElementName=Editor, Path=Score.Difficulty, Converter={StaticResource DescribedEnumToStringConverter}, ConverterParameter={x:Type entities:Difficulty}, Mode=OneWay}"/>
                            </Bold>
                            ]
                        </TextBlock>
                        <TextBlock Text="{Binding ElementName=Me, Path=TemporaryMessage, Mode=OneWay}" Visibility="{Binding ElementName=Me, Path=IsTemporaryMessageVisible, Converter={StaticResource NullableBooleanToVisibilityConverter}}"/>
                    </TextBlock>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</Window>

